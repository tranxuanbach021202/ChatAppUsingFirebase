
buildscript {
    repositories {
        google()
    }
    dependencies {
        def nav_version = "2.5.3"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version"
    }
}
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id "org.jetbrains.kotlin.kapt"
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'kotlin-parcelize'
}

def apikeyPropertiesFile = rootProject.file("apikey.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
    namespace 'com.example.chatappfirebase'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.chatappfirebase"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        pickFirst 'mozilla/public-suffix-list.txt'
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        dataBinding true
        buildConfig true
    }

    flavorDimensions "1.0"

    productFlavors {

        dev {
            dimension "1.0"
            buildConfigField("String", "SENDGRID_API_KEY", apikeyProperties['SENDGRID_API_KEY'])
            buildConfigField("String", "SENDGRID_TEMPLATE_ID", apikeyProperties['SENDGRID_TEMPLATE_ID'])
            buildConfigField("String", "APP_SIGN_ZEGOCLOUD", apikeyProperties['APP_SIGN_ZEGOCLOUD'])
            buildConfigField("Long", "APP_ID_ZEGOCLOUD ", apikeyProperties['APP_ID_ZEGOCLOUD'])
        }

    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.firebase:firebase-database-ktx:20.2.2'
    implementation 'com.google.firebase:firebase-storage-ktx:20.2.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


    // Annotation processor
    def lifecycle_version = "2.5.1"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"


    // kotlin coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.0'

    // Navigation Components
    implementation "androidx.navigation:navigation-fragment-ktx:2.5.3"
    implementation "androidx.navigation:navigation-ui-ktx:2.5.3"



    // liblary glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // hilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"

    implementation 'de.hdodenhof:circleimageview:3.1.0'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.2.3')

    // Add the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-auth-ktx'

    // load animation
    implementation 'com.airbnb.android:lottie:6.1.0'

    implementation 'com.github.jakebreen:android-sendgrid:1.3.1'


    implementation ("com.github.ZEGOCLOUD:zego_uikit_prebuilt_call_android:+")
    implementation ("com.github.ZEGOCLOUD:zego_uikit_signaling_plugin_android:+")

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:2.8.0"

    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    androidTestImplementation('androidx.test.uiautomator:uiautomator:2.3.0-alpha03')

}

// Allow references to generated code
kapt {
    correctErrorTypes = true
}
